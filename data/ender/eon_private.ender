using "enesim" : 0;

namespace "eon" : 0 {
	struct "geometry" {
		double "x";
		double "y";
		double "width";
		double "height";
	};

	struct "area" {
		double "left";
		double "top";
		double "right";
		double "bottom";
	};

	abstract "element" {
		string "name";
		double "min_width";
		double "min_height";
		double "max_width";
		double "max_height";
		double "width";
		double "height";
		double "actual_width";
		double "actual_height";
		bool "visibility";
		bool "focusable";
		ender "parent";
		int "vertical_alignment";
		int "horizontal_alignment";
	};

	abstract "widget" : "element" {
		string "theme";
		bool "enabled";
	};

	abstract "compound" : "widget" {
	};

	abstract "container" : "widget" {
		[ender] "child";
	};

	abstract "bin" : "container" {
	};

	class "stack" : "container" {
		int "orientation";
		rel int "child_weight";
	};

	class "list" : "container" {
		int "orientation";
	};

	class "grid" : "container" {
		int "num_columns";
	};

	class "wrapper" : "element" {
		object "wrapped";
	};

	class "surface" : "element" {
	};

	class "canvas" : "container" {
		rel double "child_x";
		rel double "child_y";
	};

	abstract "button_base" : "bin" {
	};

	class "button" : "button_base" {
	};

	class "color" : "compound" {
		color "value";
	};

	class "radio" : "button_base" {
		string "group_name";
		bool "selected";
	};

	class "checkbox" : "button_base" {
		bool "selected";
	};

	class "toggle" : "button_base" {
		bool "active";
	};

	class "scrollview" : "container" {
		double "x_position";
		double "y_position";
	};

	class "scrollbar" : "widget" {
		int "orientation";
		double "max";
		double "min";
		double "step_increment";
		double "page_increment";
		double "page_size";
		double "value";
	};

	class "splitter" : "container" {
		int "orientation";
		ender "second_content";
		double "position";
	};

	class "progressbar" : "widget" {
		double "progression";
	};

	class "label" : "widget" {
		int "ellipsize";
		string "text";
	};

	class "image" : "widget" {
		string "file";
	};

	class "frame" : "container" {
		string "description";
	};

	class "entry" : "widget" {
		int "alignment";
		int "max_length";
		string "text";
	};

	class "spin" : "widget" {
		double "min_range";
		double "max_range";
		double "step_increment";
		double "value";
	};

	class "tab" : "widget" {
		[ender] "child";
		rel ender "child_content";
	};

	class "svg" : "element" {
		string "file";
	};
};

