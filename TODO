+ Add a scale attribute to should be inherited to be able to adapt to other DPIs
+ Add a font-face element/css rule
+ Change the ns attribute on the theme
+ Refactor the theme files to be simple, no need to use the external interface directly
+ We need to create some common code for widgets that are in fact compound widgets, like the color_button for example.
  Basically we need to create some kind of wrapper of the theme ender element which will just add the same properties
  the theme of the widgets that are used by the new widget has, or at least what it exposes. this way the theme editor
  will automatically have the new properties and wont need to create a new theme for it. On the widget case, we also need
  a way to handle such stuff automatically? or just let it do manually?
+ List of widgets we should have:
  radio (DONE)
  checkbox (DONE)
  frame (DONE)
  image (DONE)
  progressbar (DONE)
  scrollbar (DONE) (maybe rename it to slider???)
  scrollview (DONE)
  spinner
  slider (DONE)
  notebook
  treeview
  table
  combobox
+ The theme interface should be called from the core elements directly, without passing through escen, the escen code should be moved on the theme system
  this way whenever we decide to create a svg based theme, we create a new theme which follows the theme interface, loads the escen and provides the renderer
  in case the esvg elements are no longer renderers
+ We should not call any escen function from the core elements, basically the "correct" design should be:
  code elements (enders) ---> theme (theme element) ---> theme engine (escen, xml, whatever) ---> theme implementation (like the basic one we have)
                          A                          B                                        C
  Where A should be a direct call, i.e eon_theme_element_foo_set, eon_theme_element_state_set, whatever
  Where B should be eon_theme_engine_property_set(element, enum). in the case of escen, the enum should match to a string for now given that escen does not handle
  direct integer properties yet
  Where C should be escen calling the correct object and set its properties, animations whatever
+ Cache every escen state a widget needs, to avoid having to fetch the state each time something changes
