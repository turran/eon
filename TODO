+ Make the theme attribute be something like:
  <string> | ownerDocument
+ Be able to define eot elements on the eon tree, for that we need to rename every theme element to have the theme prefix
+ Add an image stock element similar to the button stock
+ Add an event handler on the theme element to replace the relative uris with absolute uris based on the path of the theme
+ Add a LTR attribute inheritable
+ Add a scale attribute to should be inherited to be able to adapt to other DPIs
+ Add a font-face element/css rule
+ Change the ns attribute on the theme
+ We need to create some common code for widgets that are in fact compound widgets, like the color_button for example.
  Basically we need to create some kind of wrapper of the theme ender element which will just add the same properties
  the theme of the widgets that are used by the new widget has, or at least what it exposes. this way the theme editor
  will automatically have the new properties and wont need to create a new theme for it. On the widget case, we also need
  a way to handle such stuff automatically? or just let it do manually?
+ List of widgets we should have:
  radio (DONE)
  checkbox (DONE)
  frame (DONE)
  image (DONE)
  progressbar (DONE)
  scrollbar (DONE) (maybe rename it to slider???)
  scrollview (DONE)
  spinner
  slider (DONE)
  notebook
  treeview
  table
  combobox
